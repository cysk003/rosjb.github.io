<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MikroTik 脚本生成器</title>
  
  <subtitle>支持5.X-6.X版本</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://rosjb.github.io/"/>
  <updated>2020-06-21T11:20:43.393Z</updated>
  <id>http://rosjb.github.io/</id>
  
  <author>
    <name>rosjb</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ver2.1 发布</title>
    <link href="http://rosjb.github.io/2020/06/20/Ver2-1/"/>
    <id>http://rosjb.github.io/2020/06/20/Ver2-1/</id>
    <published>2020-06-20T08:16:14.000Z</published>
    <updated>2020-06-21T11:20:43.393Z</updated>
    
    <content type="html"><![CDATA[<!-- ## 💥新增 --><h2 id="💥-更新内容"><a href="#💥-更新内容" class="headerlink" title="💥 更新内容"></a>💥 更新内容</h2><ol><li>修复 常用工具-网络监测(Netwatch),log内容无法正常显示的问题</li><li>修复 常用工具-WIFI中文SSID生成器,中文转换乱码的问题 (感谢 <font color="red">无锡-IT侦探</font> 指出)</li><li>修复 完善 安装-里的PCC的功能,顺序错乱以及参数遗漏的问题</li><li>修复 PPP Service PPTP或L2TP,网通为主电信为辅的路由表显示错误问题</li><li>取消了所有命令行的 disabled=no 的命令,便于阅读<a id="more"></a></li></ol><h2 id="🛠-下载地址"><a href="#🛠-下载地址" class="headerlink" title="🛠 下载地址"></a>🛠 下载地址</h2><p>Ver2.1: <a href="https://sn9.us/file/14549722-416638652" target="_blank" rel="noopener">下载地址</a> <a href="https://www.lanzous.com/i8injbe" target="_blank" rel="noopener">备用地址</a> <a href="https://pan.baidu.com/share/init?surl=D3zV9gJzX3jq9Gs0WHRJLA" target="_blank" rel="noopener">百度网盘</a> (4st7)<br>解压密码:4321<br>md5:c27c63be7e66f41d61fa217cafe082a2 (压缩包的MD5)</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- ## 💥新增 --&gt;
&lt;h2 id=&quot;💥-更新内容&quot;&gt;&lt;a href=&quot;#💥-更新内容&quot; class=&quot;headerlink&quot; title=&quot;💥 更新内容&quot;&gt;&lt;/a&gt;💥 更新内容&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;修复 常用工具-网络监测(Netwatch),log内容无法正常显示的问题&lt;/li&gt;
&lt;li&gt;修复 常用工具-WIFI中文SSID生成器,中文转换乱码的问题 (感谢 &lt;font color=&quot;red&quot;&gt;无锡-IT侦探&lt;/font&gt; 指出)&lt;/li&gt;
&lt;li&gt;修复 完善 安装-里的PCC的功能,顺序错乱以及参数遗漏的问题&lt;/li&gt;
&lt;li&gt;修复 PPP Service PPTP或L2TP,网通为主电信为辅的路由表显示错误问题&lt;/li&gt;
&lt;li&gt;取消了所有命令行的 disabled=no 的命令,便于阅读&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="下载" scheme="http://rosjb.github.io/tags/%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>提问的智慧</title>
    <link href="http://rosjb.github.io/2020/06/10/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    <id>http://rosjb.github.io/2020/06/10/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</id>
    <published>2020-06-09T16:40:55.000Z</published>
    <updated>2020-06-20T12:58:44.609Z</updated>
    
    <content type="html"><![CDATA[<p>艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）</p><p><a href="https://github.com/ruby-china/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md" target="_blank" rel="noopener">https://github.com/ruby-china/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md</a></p><p>这是一篇长文，看完需要十几分钟的时间。如果之前没有认真看过并且思考过，这十几分钟会改变你的职业生涯。<a id="more"></a>这文章可能会出现一些让人不适的词语或者过时的例子，但我认为这不会影响它要表达的内容，而你需要好好琢磨作者的思想。</p><p>《提问的智慧》是一个敲门砖，它把黑客间的礼仪和准则明白地写下来，让我们了解到一个事实，为什么那些看起来很牛的人几乎从不提问。其实他们也有问题，但是通常在提问之前就自己解决了。不是因为他们本来就牛，而是解决问题的经历让他们成为牛人。最终，你只会看到网络上多了一篇文章：关于解决XXX问题的方案。</p><p>要不要花十几分钟改变自己的人生，决定权在自己。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ruby-china/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ruby-china/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一篇长文，看完需要十几分钟的时间。如果之前没有认真看过并且思考过，这十几分钟会改变你的职业生涯。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="提问" scheme="http://rosjb.github.io/tags/%E6%8F%90%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>CN2和BGP哪个好？</title>
    <link href="http://rosjb.github.io/2020/04/12/CN2%E5%92%8CBGP%E5%93%AA%E4%B8%AA%E5%A5%BD/"/>
    <id>http://rosjb.github.io/2020/04/12/CN2%E5%92%8CBGP%E5%93%AA%E4%B8%AA%E5%A5%BD/</id>
    <published>2020-04-12T10:23:56.000Z</published>
    <updated>2020-06-21T12:00:29.595Z</updated>
    
    <content type="html"><![CDATA[<p>哪个快网必须要说一下，其实CN2和BGP是两个概念：</p><ul><li><strong>CN2</strong>：CN2是指中国电信的优质线路，CN2出国线路延迟低，高峰时段网络稳定，一般走的是59.43开头的节点；</li><li><strong>BGP</strong>：BGP不是线路，它是指边界网关路由协议，比如国内有电信、联通及移动等宽带，BGP协议能够帮助用户寻找最佳的访问路径来提升速度。</li></ul><p><strong>综上，如何理解CN2和BGP呢？</strong></p><ul><li><strong>CN2是指线路，对应的是出国的；</strong></li><li><strong>BGP是指路由协议，对应的是国内的不同运营商之间的寻址问题。</strong></li></ul><p>所以如果网站面向国内用户那就选BGP就够了，如果是面向国外那肯定优选CN2线路。 哪个快网建议选择阿里云或者腾讯云这种大厂，宽带独享，国内访问延迟一般可以控制在60ms以内；面向国外，比如阿里云的香港节点，走的就是CN2线路。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;哪个快网必须要说一下，其实CN2和BGP是两个概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CN2&lt;/strong&gt;：CN2是指中国电信的优质线路，CN2出国线路延迟低，高峰时段网络稳定，一般走的是59.43开头的节点；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BGP&lt;/st
      
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="BGP" scheme="http://rosjb.github.io/tags/BGP/"/>
    
      <category term="CN2" scheme="http://rosjb.github.io/tags/CN2/"/>
    
  </entry>
  
  <entry>
    <title>MikroTik RouterOS v6 有哪些新的特性?</title>
    <link href="http://rosjb.github.io/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/"/>
    <id>http://rosjb.github.io/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/</id>
    <published>2019-03-21T05:34:44.000Z</published>
    <updated>2020-06-22T06:28:33.557Z</updated>
    
    <content type="html"><![CDATA[<h4 id="支持新产品"><a href="#支持新产品" class="headerlink" title="支持新产品"></a>支持新产品</h4><ul><li>CloudCoreRouter、CloudRouterSwitch和其他新设备将只在RouterOS v6.x中得到完全支持</li></ul><hr><h4 id="新的Linux内核"><a href="#新的Linux内核" class="headerlink" title="新的Linux内核"></a>新的Linux内核</h4><ul><li>RouterOS 5.25 – Linux Kernel version 2.6.35</li><li>RouterOS 6.x – Linux Kernel version 3.3.5+</li><li>更新详细细节请看: <a href="http://www.kernel.org/" target="_blank" rel="noopener">http://www.kernel.org/</a><a id="more"></a></li></ul><hr><h4 id="新的CPU架构支持"><a href="#新的CPU架构支持" class="headerlink" title="新的CPU架构支持"></a>新的CPU架构支持</h4><ul><li>在v5.x中,有4种不同的架构<ul><li>mipsle (RB1xx, RB5xx)</li><li>mipsbe (RB4xx, RB7xx, RB9xx, RB2011, SXT, Sextant, Groove, Metal, CRS)</li><li>ppc (RB1xxx, RB6xx, RB8xx)</li><li>x86</li></ul></li><li>在 v6.x 还有一个架构<ul><li>tile (CCR1xxx)</li></ul></li></ul><hr><h4 id="RouterOS-tile-架构"><a href="#RouterOS-tile-架构" class="headerlink" title="RouterOS tile 架构"></a>RouterOS tile 架构</h4><ul><li>只适用于CCR设备</li><li>64位操作系统(更多的RAM)</li><li>支持双通道内存(更快的RAM)</li><li>硬件加速多线程(不需要<strong>RPS</strong>和<a href="https://baike.baidu.com/item/IRQ/1229055?fr=aladdin" target="_blank" rel="noopener">IRQ</a>管理)</li></ul><h4 id="RPS"><a href="#RPS" class="headerlink" title="RPS"></a><strong>RPS</strong></h4><p><strong>Sub-menu level:</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/system resource rps</span><br></pre></td></tr></table></figure><p>此菜单允许启用接收包控制(RPS)，以减少单核心的使用。 由于每个设备队列的序列化，<a href="https://wiki.linuxfoundation.org/networking/napi" target="_blank" rel="noopener">NAPI</a>在高包负载下可能成为瓶颈。RPS将接收到的数据包处理的负载分布在多个核上。</p><p><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/1.png" alt="1"></p><hr><h4 id="新内核的特性"><a href="#新内核的特性" class="headerlink" title="新内核的特性"></a>新内核的特性</h4><ul><li>最新接口驱动程序支持x86系统</li><li>改进的界面管理—可缩放到最多几千个接口等等</li><li>占用更少的空间储存-运作良好的32 mib flash<br><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/2.png" alt="2"></li></ul><hr><h4 id="还有什么其他新的东西吗"><a href="#还有什么其他新的东西吗" class="headerlink" title="还有什么其他新的东西吗?"></a>还有什么其他新的东西吗?</h4><ul><li>提升16个CPU核心限制</li><li>改进了多cpu系统上的RouterOS性能(高达20%)</li><li>改进的RouterBOARD接口驱动程序性能(高达30%)</li><li>Routerboard包现在合并到系统包中</li></ul><hr><h4 id="快速路径"><a href="#快速路径" class="headerlink" title="快速路径"></a>快速路径</h4><ul><li>快速路径允许在Linux内核中转发包，而不需要额外的处理。它显著提高了转发速度。</li><li>快速路径要求<ul><li>配置中应允许快速路径</li><li>接口驱动程序必须有支持</li><li>特定配置条件</li></ul></li><li>目前RouterOS有以下快速路径处理程序: ipv4，traffic generator，mpls，bridge</li><li>未来将添加更多处理程序。</li></ul><hr><h4 id="新的吞吐量测试结果"><a href="#新的吞吐量测试结果" class="headerlink" title="新的吞吐量测试结果"></a>新的吞吐量测试结果</h4><p><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/3.png" alt="3"></p><hr><h4 id="吞吐量-百万pps"><a href="#吞吐量-百万pps" class="headerlink" title="吞吐量(百万pps)"></a>吞吐量(百万pps)</h4><p><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/4.png" alt="4"></p><hr><h4 id="QoS系统修改了"><a href="#QoS系统修改了" class="headerlink" title="QoS系统修改了"></a>QoS系统修改了</h4><ul><li>某些特定配置中的简单队列和树队列可能在从RouterOS v3.x, v4.x, v5.x升级到RouterOS v6.x后失效</li><li>自动配置转换不可用, 因为某些配置可能导致无法访问路由器</li></ul><hr><h4 id="数据包流程图的变化"><a href="#数据包流程图的变化" class="headerlink" title="数据包流程图的变化"></a>数据包流程图的变化</h4><ul><li>在数据包的“生命周期”中，在多个不同的位置排队会导致多线程环境中性能的极大下降</li><li>在RouterOS v6.x中对QoS系统进行了重新设计，使路由器中的其他进程在同一位置排队</li><li>删除HTB“global-in”、“global-out”和“global-total”，为之代替的是HTB“global”，放置在路由器数据包“生命周期”的末尾。</li></ul><p><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/5.png" alt="5"><br><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/6.png" alt="6"></p><hr><h4 id="额外的变化"><a href="#额外的变化" class="headerlink" title="额外的变化"></a>额外的变化</h4><ul><li>简单队列现在与队列树完全分离—相同的包可以在HTB“全局”和简单队列中捕获(在v5简单队列共享全局- HTBs中)</li><li>由于所有队列现在都发生在SRC-NAT之后，所以PCQ队列类型被更新，现在是NAT来感知的(来自连接跟踪)</li><li>现在可以为每个队列指定多个包标记</li></ul><hr><h4 id="简单队列-Simple-Queues"><a href="#简单队列-Simple-Queues" class="headerlink" title="简单队列(Simple Queues)"></a>简单队列(Simple Queues)</h4><ul><li>更新简单队列匹配算法</li><li>对于丢失现有简单队列的包，开销非常小</li><li>顶级简单队列现在在CPU内核之间进行平衡(32个队列比CCR1036上的1个队列快9倍)</li></ul><p><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/7.png" alt="7"></p><hr><h4 id="简单的简单队列"><a href="#简单的简单队列" class="headerlink" title="简单的简单队列"></a>简单的简单队列</h4><ul><li>“target-address”和”interface”参数合并为一个“target”参数</li><li>将”dst-address”参数改为”dst”，现在可以指定为接口</li><li>“direction “和”p2p”参数删除</li><li>现在必须在创建简单队列时指定“target”</li><li>分离的“优先级”参数用于下载、上传和总计</li></ul><h3 id="Simple-Queue-Interface-v5-x"><a href="#Simple-Queue-Interface-v5-x" class="headerlink" title="Simple Queue Interface v5.x"></a>Simple Queue Interface v5.x</h3><p><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/8.png" alt="8"></p><h3 id="Simple-Queue-Interface-v6-x"><a href="#Simple-Queue-Interface-v6-x" class="headerlink" title="Simple Queue Interface v6.x"></a>Simple Queue Interface v6.x</h3><p><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/9.png" alt="9"></p><hr><h4 id="防火墙的更改"><a href="#防火墙的更改" class="headerlink" title="防火墙的更改"></a>防火墙的更改</h4><ul><li>防火墙现在有“all-ether”、“all-wireless”、“allvlan”、“all-ppp”作为接口匹配的可能性</li><li>新的优先级(priority)匹配器</li><li>新的“change-dscp”选项“from-priority”和“from priority-to high-3-bits”</li><li>新的Mangle特性“snif-tzsp”，“snif-pc”发送数据包流到远程嗅探器</li></ul><hr><h4 id="隧道-Tunnels-的变化"><a href="#隧道-Tunnels-的变化" class="headerlink" title="隧道(Tunnels)的变化"></a>隧道(Tunnels)的变化</h4><ul><li>SSTP现在可以强制AES加密，而不是默认的RC4加密</li><li>PPP配置文件现在有“bridge-path-cost”和“bridge-port-priority”参数</li><li>PPP secret显示最后注销的日期和时间</li><li>Hotspot和PPP现在支持RADIUS中的多个地址列表</li><li>仅为“all-ppp”接口创建2条动态“change-mss” mangle规则;</li></ul><hr><h4 id="DHCP的变化"><a href="#DHCP的变化" class="headerlink" title="DHCP的变化"></a>DHCP的变化</h4><ul><li>dhcp选项现在可以通过混合不同的数据类型来指定</li><li>dhcp-client具有自定义dhcp-option特性(例如:/ip dhcp-client option print)</li><li>DHCPv4客户端现在为add-default-route参数提供了特殊类的选项</li><li>添加DHCP中继代理信息选项的可能性</li><li>DHCPv6 DNS选项支持</li></ul><hr><h4 id="其他的变化"><a href="#其他的变化" class="headerlink" title="其他的变化"></a>其他的变化</h4><ul><li>在bridge、bonding 或switch group中的接口将显示从属标志</li><li>“/export compact”现在默认为“/export”，使用“/export verbose”获取以前的行为</li><li>连接的路由在界面关闭时失效。</li><li>可配置的Linux内核选项在/ip settings 和/ipv6 settings menus</li><li>最初的OpenFlow支持</li></ul><hr><h4 id="IPSec-Road-Warrior"><a href="#IPSec-Road-Warrior" class="headerlink" title="IPSec Road Warrior"></a>IPSec Road Warrior</h4><ul><li>RoadWarrior 安装的支持<ul><li>Conf模式的支持</li><li>被动IPSec对等模式</li><li>Xauth支持(Xauth PSK和Hybrid  RSA)</li><li>策略模板和生成策略</li><li>Peer groups(对等组)</li><li>可以使用具有相同IP的多个对等点。</li><li>更多</li></ul></li></ul><hr><h4 id="SCEP-协议支持"><a href="#SCEP-协议支持" class="headerlink" title="SCEP 协议支持"></a>SCEP 协议支持</h4><ul><li>简单证书注册协议(SCEP)</li><li>本协议允许:<ul><li>从CA服务器或RA获取CA证书</li><li>使用临时密钥创建自签名证书</li><li>发送证书请求到服务器</li><li>使用CA密码保护CA操作</li></ul></li></ul><p>更多信息请访问:<a href="http://wiki.mikrotik.com/wiki/Manual:System/Certificates#SCEP" target="_blank" rel="noopener">http://wiki.mikrotik.com/wiki/Manual:System/Certificates#SCEP</a></p><hr><h4 id="先进的无线-Wireless-频道"><a href="#先进的无线-Wireless-频道" class="headerlink" title="先进的无线(Wireless )频道"></a>先进的无线(Wireless )频道</h4><ul><li>只能在Atheros AR92xx芯片和MikroTik设备之间工作<ul><li>-中心频率范围:<ul><li>2192 - 2734 mhz</li><li>4800 - 6100 mhz</li></ul></li></ul></li><li>选择精确的中心频率(0.5MHz步长)</li><li>选择通道宽度(2.5-30MHz, 0.5MHz步长)</li><li>使用高级频道需要获得超级频道许可——这是免费的(只需要签署关于正确使用的文件)</li><li>位于/interface wireless channels</li><li>允许命名每个高级频道，并将它们分组到自定义列表中</li><li>这些名称和列表名称稍后应该在wireless clients scan-list中使用，以使他们能够看到高级通道APs(老式的scanlist条目将无法工作)</li><li>自定义扫描列表选项:<ul><li>默认，频率，频率范围</li><li>高级频道名称或列表名称(list name)</li></ul></li></ul><hr><h4 id="先进的通道测试"><a href="#先进的通道测试" class="headerlink" title="先进的通道测试"></a>先进的通道测试</h4><ul><li>中心频率- 5362.5MHz</li><li>通道宽度- 30MHz</li><li>扩展通道-以上</li><li>最大数据速率- mcs - 15,405mbps</li><li>无线协议- 802.11n</li></ul><p><a href="/MikroTik-RouterOS-v6-有哪些新的特性/10.png"><img src="/2019/03/21/mikrotik-routeros-v6-%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B0%E7%9A%84%E7%89%B9%E6%80%A7/10.png" alt></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;支持新产品&quot;&gt;&lt;a href=&quot;#支持新产品&quot; class=&quot;headerlink&quot; title=&quot;支持新产品&quot;&gt;&lt;/a&gt;支持新产品&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;CloudCoreRouter、CloudRouterSwitch和其他新设备将只在RouterOS v6.x中得到完全支持&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&quot;新的Linux内核&quot;&gt;&lt;a href=&quot;#新的Linux内核&quot; class=&quot;headerlink&quot; title=&quot;新的Linux内核&quot;&gt;&lt;/a&gt;新的Linux内核&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;RouterOS 5.25 – Linux Kernel version 2.6.35&lt;/li&gt;
&lt;li&gt;RouterOS 6.x – Linux Kernel version 3.3.5+&lt;/li&gt;
&lt;li&gt;更新详细细节请看: &lt;a href=&quot;http://www.kernel.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.kernel.org/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="ROS6版本新特性" scheme="http://rosjb.github.io/tags/ROS6%E7%89%88%E6%9C%AC%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>[转]五大开源 Web 代理服务器横评：Squid、Privoxy、Varnish、Polipo、Tinyproxy</title>
    <link href="http://rosjb.github.io/2017/09/17/%E4%BA%94%E5%A4%A7%E5%BC%80%E6%BA%90%20Web%20%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%AA%E8%AF%84/"/>
    <id>http://rosjb.github.io/2017/09/17/%E4%BA%94%E5%A4%A7%E5%BC%80%E6%BA%90%20Web%20%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%AA%E8%AF%84/</id>
    <published>2017-09-17T05:50:02.000Z</published>
    <updated>2020-06-21T13:23:03.796Z</updated>
    
    <content type="html"><![CDATA[<p>Web 代理软件转发 HTTP 请求时并不会改变数据流量。它们可以配置成透明代理，而无需客户端配置。它们还可以作为反向代理放在网站的前端；这样缓存服务器可以为一台或多台 web 服务器提供无限量的用户服务。 网站代理功能多样，有着宽泛的用途：从缓存页面、DNS 和其他查询，到加速 web 服务器响应、降低带宽消耗。代理软件广泛用于大型高访问量的网站，比如纽约时报、卫报， 以及社交媒体网站如 Twitter、Facebook 和 Wikipedia。 页面缓存已经成为优化单位时间内所能吞吐的数据量的至关重要的机制。好的 Web 缓存还能降低延迟，尽可能快地响应页面，让终端用户不至于因等待内容的时间过久而失去耐心。它们还能将频繁访问的内容缓存起来以节省带宽。如果你需要降低服务器负载并改善网站内容响应速度，那缓存软件能带来的好处就绝对值得探索一番。 <img src="https://dn-linuxcn.qbox.me/data/attachment/album/201603/17/224844ogau2uah0n7uuvzz.jpg" alt> 为深入探查 Linux 下可用的相关软件的质量，我列出了下边5个优秀的开源 web 代理工具。它们中有些功能完备强大，也有几个只需很低的资源就能运行。</p><a id="more"></a><h3 id="Squid"><a href="#Squid" class="headerlink" title="Squid"></a>Squid</h3><p>Squid 是一个高性能、开源的代理缓存服务器和 Web 缓存进程，支持 FTP、Internet Gopher、HTTPS 和 SSL 等多种协议。它通过一个非阻塞的、I/O 事件驱动的单一进程处理所有的 IPV4 或 IPV6 协议请求。 Squid 由一个主服务程序 squid，和 DNS 查询程序 dnsserver，另外还有一些可选的请求重写、执行认证程序组件，及一些管理和客户端工具构成。 Squid 提供了丰富的访问控制、认证和日志环境， 用于开发 web 代理和内容服务网站应用。 其特性包括：</p><ul><li>Web 代理：<ul><li>通过缓存来降低访问时间和带宽使用</li><li>将元数据和访问特别频繁的对象缓存到内存中</li><li>缓存 DNS 查询</li><li>支持非阻塞的 DNS 查询</li><li>实现了失败请求的未果缓存</li></ul></li><li>Squid 缓存可架设为层次结构，或网状结构以节省额外的带宽</li><li>通过广泛的访问控制来执行网站访问策略</li><li>隐匿请求，如禁用或修改客户端 HTTP 请求头特定属性</li><li>反向代理</li><li>媒体范围media-range限制</li><li>支持 SSL</li><li>支持 IPv6</li><li>错误页面的本地化 - Squid 可以根据访问者的语言选项对每个请求展示本地化的错误页面</li><li>连接固定Connection Pinning（用于 NTLM Auth Passthrough） - 一种允许 Web 服务器通过 Web 代理使用Microsoft NTLM 安全认证替代 HTTP 标准认证的方案</li><li>支持服务质量QoS, Quality of Service流<ul><li>选择一个 TOS/Diffserv 值来标记本地命中</li><li>选择一个 TOS/Diffserv 值来标记对端命中</li><li>选择性地仅标记同级或上级请求</li><li>允许任意发往客户端的 HTTP 响应保持由远程服务器处响应的 TOS 值</li><li>对收到的远程服务器的 TOS 值，在复制之前对指定位进行掩码操作，再发送到客户端</li></ul></li><li>SSL Bump (用于 HTTPS 过滤和适配) - Squid-in-the-middle，在 CONNECT 方式的 SSL 隧道中，用配置化的客户端和服务器端证书，对流量进行解密和加密</li><li>支持适配模块</li><li>ICAP 旁路和重试增强 - 通过完全的旁路和动态链式路由扩展 ICAP，来处理多多个适应性服务。</li><li>支持 ICY 流式协议 - 俗称 SHOUTcast 多媒体流</li><li>动态 SSL 证书生成</li><li>支持 ICAP 协议 (Internet Content Adaptation Protocol)</li><li>完整的请求日志记录</li><li>匿名连接</li></ul><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201603/17/222514zocvp3vb3zivvyrl.png" alt></p><ul><li>网站: <a href="http://www.squid-cache.org/" target="_blank" rel="noopener">www.squid-cache.org</a></li><li>开发: 美国国家应用网络研究实验室(NLANR)和网络志愿者</li><li>授权: GNU GPL v2</li><li>版本号: 4.0.1</li></ul><h3 id="Privoxy"><a href="#Privoxy" class="headerlink" title="Privoxy"></a>Privoxy</h3><p>Privoxy (Privacy Enhancing Proxy) 是一个非缓存类 Web 代理软件，它自带的高级过滤功能可以用来增强隐私保护、修改页面内容和 HTTP 头部信息、访问控制，以及去除广告和其它招人反感的互联网垃圾。Privoxy 的配置非常灵活，能充分定制已满足各种各样的需求和偏好。它支持单机和多用户网络两种模式。 Privoxy 使用 action 规则来处理浏览器和远程站点间的数据流。 其特性包括：</p><ul><li>高度配置化——可以完全定制你的配置</li><li>广告拦截</li><li>Cookie 管理</li><li>支持“Connection: keep-alive”。可以无视客户端配置而保持外发的持久连接</li><li>支持 IPv6</li><li>标签化Tagging，允许按照客户端和服务器的请求头进行处理</li><li>作为拦截intercepting代理器运行</li><li>巧妙的动作action和过滤机制用来处理服务器和客户端的 HTTP 头部</li><li>可以与其他代理软件链式使用</li><li>整合了基于浏览器的配置和控制工具，能在线跟踪规则和过滤效果，可远程开关</li><li>页面过滤（文本替换、根据尺寸大小删除广告栏, 隐藏的“web-bugs”元素和 HTML 容错等）</li><li>模块化的配置使得标准配置和用户配置可以存放于不同文件中，这样安装更新就不会覆盖用户的个性化设置</li><li>配置文件支持 Perl 兼容的正则表达式，以及更为精妙和灵活的配置语法</li><li>GIF 去动画</li><li>旁路处理大量点击跟踪click-tracking脚本（避免脚本重定向）</li><li>大多数代理生成的页面（例如 “访问受限” 页面）可由用户自定义HTML模板</li><li>自动监测配置文件的修改并重新读取</li><li>大多数功能可以基于每个站点或每个 URL 位置来进行控制</li></ul><ul><li>网站: <a href="http://www.privoxy.org/" target="_blank" rel="noopener">www.privoxy.org</a></li><li>开发: Fabian Keil（开发领导者）, David Schmidt, 和众多其他贡献者</li><li>授权: GNU GPL v2</li><li>版本号: 3.4.2</li></ul><h3 id="Varnish-Cache"><a href="#Varnish-Cache" class="headerlink" title="Varnish Cache"></a>Varnish Cache</h3><p>Varnish Cache 是一个为性能和灵活性而生的 web 加速器。它新颖的架构设计能带来显著的性能提升。根据你的架构，通常情况下它能加速响应速度300-1000倍。Varnish 将页面存储到内存，这样 web 服务器就无需重复地创建相同的页面，只需要在页面发生变化后重新生成。页面内容直接从内存中访问，当然比其他方式更快。 此外 Varnish 能大大提升响应 web 页面的速度，用在任何应用服务器上都能使网站访问速度大幅度地提升。 按经验，Varnish Cache 比较经济的配置是1-16GB内存+ SSD 固态硬盘。 其特性包括：</p><ul><li>新颖的设计</li><li>VCL - 非常灵活的配置语言。VCL 配置会转换成 C，然后编译、加载、运行，灵活且高效</li><li>能使用 round-robin 轮询和随机分发两种方式来负载均衡，两种方式下后端服务器都可以设置权重</li><li>基于 DNS、随机、散列和客户端 IP 的分发器Director</li><li>多台后端主机间的负载均衡</li><li>支持 Edge Side Includes，包括拼装压缩后的 ESI 片段</li><li>重度多线程并发</li><li>URL 重写</li><li>单 Varnish 能够缓存多个虚拟主机</li><li>日志数据存储在共享内存中</li><li>基本的后端服务器健康检查</li><li>优雅地处理后端服务器“挂掉”</li><li>命令行界面的管理控制台</li><li>使用内联 C 语言来扩展 Varnish</li><li>可以与 Apache 用在相同的系统上</li><li>单个系统可运行多个 Varnish</li><li>支持 HAProxy 代理协议。该协议在每个收到的 TCP 请求——例如 SSL 终止过程中——附加一小段 http 头信息，以记录客户端的真实地址</li><li>冷热 VCL 状态</li><li>可以用名为 VMOD 的 Varnish 模块来提供插件扩展</li><li>通过 VMOD 定义后端主机</li><li>Gzip 压缩及解压</li><li>HTTP 流的通过和获取</li><li>神圣模式和优雅模式。用 Varnish 作为负载均衡器，神圣模式下可以将不稳定的后端服务器在一段时间内打入黑名单，阻止它们继续提供流量服务。优雅模式允许 Varnish 在获取不到后端服务器状态良好的响应时，提供已过期版本的页面或其它内容。</li><li>实验性支持持久化存储，无需 LRU 缓存淘汰</li></ul><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201603/17/223550eoavsnrj7nw1uaza.png" alt></p><ul><li>网站: <a href="https://www.varnish-cache.org/" target="_blank" rel="noopener">www.varnish-cache.org</a></li><li>开发: Varnish Software</li><li>授权: FreeBSD</li><li>版本号: 4.1.0</li></ul><h3 id="Polipo"><a href="#Polipo" class="headerlink" title="Polipo"></a>Polipo</h3><p>Polipo 是一个开源的 HTTP 缓存代理，只需要非常低的资源开销。 它监听来自浏览器的 web 页面请求，转发到 web 服务器，然后将服务器的响应转发到浏览器。在此过程中，它能优化和整形网络流量。从本质来讲 Polipo 与 WWWOFFLE 很相似，但其实现技术更接近于 Squid。 Polipo 最开始的目标是作为一个兼容 HTTP/1.1 的代理，理论它能在任何兼容 HTTP/1.1 或更早的 HTTP/1.0 的站点上运行。 其特性包括：</p><ul><li>HTTP 1.1、IPv4 &amp; IPv6、流量过滤和隐私保护增强</li><li>如确认远程服务器支持的话，则无论收到的请求是管道处理过的还是在多个连接上同时收到的，都使用 HTTP/1.1 管道pipelining</li><li>下载被中断时缓存起始部分，当需要续传时用区间Range请求来完成下载</li><li>将 HTTP/1.0 的客户端请求升级为 HTTP/1.1，然后按照客户端支持的级别进行升级或降级后回复</li><li>全面支持 IPv6 （作用域（链路本地）地址除外）</li><li>作为 IPv4 和 IPv6 网络的网桥</li><li>内容过滤</li><li>能使用Poor Man 多路复用技术Poor Man’s Multiplexing降低延迟</li><li>支持 SOCKS 4 和 SOCKS 5 协议</li><li>HTTPS 代理</li><li>扮演透明代理的角色</li><li>可以与 Privoxy 或 tor 一起运行</li></ul><ul><li>网站: <a href="http://www.pps.univ-paris-diderot.fr/~jch/software/polipo/" target="_blank" rel="noopener">www.pps.univ-paris-diderot.fr/~jch/software/polipo/</a></li><li>开发: Juliusz Chroboczek, Christopher Davis</li><li>授权: MIT License</li><li>版本号: 1.1.1</li></ul><h3 id="Tinyproxy"><a href="#Tinyproxy" class="headerlink" title="Tinyproxy"></a>Tinyproxy</h3><p>Tinyproxy 是一个轻量级的开源 web 代理守护进程，其设计目标是快而小。它适用于需要完整 HTTP 代理特性，但系统资源又不足以运行大型代理的场景，比如嵌入式部署。 Tinyproxy 对小规模网络非常有用，这样的场合下大型代理会使系统资源紧张，或有安全风险。Tinyproxy 的一个关键特性是其缓冲连接的理念。从效果上看， Tinyproxy 对服务器的响应进行了高速缓冲，然后按照客户端能够处理的最高速度进行响应。该特性极大的降低了网络延滞带来的问题。 特性：</p><ul><li>易于修改</li><li>隐匿模式 - 定义哪些 HTTP 头允许通过，哪些又会被拦截</li><li>支持 HTTPS - Tinyproxy 允许通过 CONNECT 方法转发 HTTPS 连接，任何情况下都不会修改数据流量</li><li>远程监控 - 远程访问代理统计数据，让你能清楚了解代理服务当前的忙碌状态</li><li>平均负载监控 - 通过配置，当服务器的负载接近一定值后拒绝新连接</li><li>访问控制 - 通过配置，仅允许指定子网或 IP 地址的访问</li><li>安全 - 运行无需额外权限，减小了系统受到威胁的概率</li><li>基于 URL 的过滤 - 允许基于域和URL的黑白名单</li><li>透明代理 - 配置为透明代理，这样客户端就无需任何配置</li><li>代理链 - 在流量出口处采用上游代理服务器，而不是直接转发到目标服务器，创建我们所说的代理链</li><li>隐私特性 - 限制允许从浏览器收到的来自 HTTP 服务器的数据（例如 cookies），同时限制允许通过的从浏览器到 HTTP 服务器的数据（例如版本信息）</li><li>低开销 - 使用 glibc 内存开销只有2MB，CPU 负载按并发连接数线性增长（取决于网络连接速度）。 Tinyproxy 可以运行在老旧的机器上而无需担心性能问题。</li></ul><ul><li>网站: <a href="https://banu.com/tinyproxy/" target="_blank" rel="noopener">banu.com/tinyproxy</a></li><li>开发: Robert James Kaes和其他贡献者</li><li>授权: GNU GPL v2</li><li>版本号: 1.8.3</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Web 代理软件转发 HTTP 请求时并不会改变数据流量。它们可以配置成透明代理，而无需客户端配置。它们还可以作为反向代理放在网站的前端；这样缓存服务器可以为一台或多台 web 服务器提供无限量的用户服务。 网站代理功能多样，有着宽泛的用途：从缓存页面、DNS 和其他查询，到加速 web 服务器响应、降低带宽消耗。代理软件广泛用于大型高访问量的网站，比如纽约时报、卫报， 以及社交媒体网站如 Twitter、Facebook 和 Wikipedia。 页面缓存已经成为优化单位时间内所能吞吐的数据量的至关重要的机制。好的 Web 缓存还能降低延迟，尽可能快地响应页面，让终端用户不至于因等待内容的时间过久而失去耐心。它们还能将频繁访问的内容缓存起来以节省带宽。如果你需要降低服务器负载并改善网站内容响应速度，那缓存软件能带来的好处就绝对值得探索一番。 &lt;img src=&quot;https://dn-linuxcn.qbox.me/data/attachment/album/201603/17/224844ogau2uah0n7uuvzz.jpg&quot; alt&gt; 为深入探查 Linux 下可用的相关软件的质量，我列出了下边5个优秀的开源 web 代理工具。它们中有些功能完备强大，也有几个只需很低的资源就能运行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="代理" scheme="http://rosjb.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Mangle 分类标记介绍</title>
    <link href="http://rosjb.github.io/2016/09/27/Mangle%E5%88%86%E7%B1%BB%E6%A0%87%E8%AE%B0%E4%BB%8B%E7%BB%8D/"/>
    <id>http://rosjb.github.io/2016/09/27/Mangle%E5%88%86%E7%B1%BB%E6%A0%87%E8%AE%B0%E4%BB%8B%E7%BB%8D/</id>
    <published>2016-09-27T13:07:48.000Z</published>
    <updated>2020-06-21T14:18:27.259Z</updated>
    
    <content type="html"><![CDATA[<p>mangle 允许对 IP 数据包做特殊的标记， mangle 是通过修改指定的 IP 数据包头字段，去标记 IP 数据包的特征 能标记端口、 IP、协议、 TCP 协议和相应的 IP 数据流。 Mangle 属于综合性功能，所以在路由、流量控制和其他相应功能中都会涉及到。 </p><p>需要功能包: system<br>需要等级: Level1<br>操作路径: /ip firewall mangle<br>协议标准: IP</p><a id="more"></a><h2 id="Mangle-介绍"><a href="#Mangle-介绍" class="headerlink" title="Mangle 介绍"></a>Mangle 介绍</h2><p>Mangle 是一种标记器，标记特殊的数据包等待将来处理。在 RouterOS 中许多其他的功能组件会使用到他，如queue-trees 和 nat，他们识别到一个数据包了标记的便会做相应的处理。 Mangle 标记仅存在于该路由器中，他们无法传输到网络中去。 根据数据传输方式不同可以选择： </p><ul><li><strong>Prerouting：路由前，常用于标记策略和端口路由</strong></li><li><strong>Input：进入路由器的数据</strong></li><li><strong>Foreward：通过路由转发，用于修改 TTL、 TCP-MSS 和流量控制规则</strong></li><li><strong>Output：数据输出</strong></li><li><strong>Prostrouting：路由后</strong> </li></ul><p>RouterOS 中的 IP firewall 主要由 3 个规则部分组成 Mangle、 Filter、 NAT ，而 Address-list 常用于地址列表分类。 Mangle 通过标记特定的 IP 数据流后，为 Filter、 NAT 和、路由、 Queue 提供标记后的 IP 数据流</p><p> <img src="/2016/09/27/Mangle%E5%88%86%E7%B1%BB%E6%A0%87%E8%AE%B0%E4%BB%8B%E7%BB%8D/img2719.jpg" alt="img2719"></p><p>  标记 IP 数据流的三种类型，这三种类型会在各种应用中多次出现，特别是 Queue 的流量控制和 ip route 的路由：</p><ul><li><strong>Mark-connection：标记所有 IP 流的连接</strong></li><li><strong>Mark-packet：标记 IP 流中数据包</strong></li><li><strong>Mark-routing：标记 IP 流中 IP 数据包的路由信息</strong></li></ul><p>三种类型的关系，所有的在 IP 数据包传输前，首先需要通过建立 TCP/UDP 连接，进行传输。所以当数据通过 IP 流进入 Mangle 后，建立相应的连接标记，并从连接标记中提取数据包，做处理。图示如下：<br>  <img src="/2016/09/27/Mangle%E5%88%86%E7%B1%BB%E6%A0%87%E8%AE%B0%E4%BB%8B%E7%BB%8D/img2724.jpg" alt="img2724"></p><h2 id="Mangle-应用"><a href="#Mangle-应用" class="headerlink" title="Mangle 应用"></a>Mangle 应用</h2><h3 id="Peer-to-Peer-传输标记"><a href="#Peer-to-Peer-传输标记" class="headerlink" title="Peer-to-Peer 传输标记"></a>Peer-to-Peer 传输标记</h3><p>保证优质的网络连接，如 VoIP 和 HTTP 等为最优先级，将 P2P 的优先级设置为最低 RouterOS QOS 操作首先使用 mangle 标记不同类型的传输，然后把它们放入的 queues 做不同的限制。下面的事例是强迫 P2P 的总的传输不能超过 1Mbps，其他的传输连接则扩大连接带宽和优先级：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[admin@MikroTik] &gt; /ip firewall mangle add chain=forward p2p=all-p2p action=mark-connection new-connection-mark=p2p_conn</span><br><span class="line">[admin@MikroTik] &gt; /ip firewall mangle add chain=forward connection-mark=p2p_conn action=mark-packet new-packet-mark=p2p</span><br><span class="line">[admin@MikroTik] &gt; /ip firewall mangle add chain=forward packet-mark=!p2p_conn action=mark-packet new-packet-mark=other</span><br><span class="line">[admin@MikroTik] &gt; /ip firewall mangle <span class="built_in">print</span></span><br><span class="line">Flags: X - disabled, I - invalid, D - dynamic</span><br><span class="line">0 chain=forward p2p=all-p2p action=mark-connection new-connection-mark=p2p_conn</span><br><span class="line">1 chain=forward connection-mark=p2p_conn action=mark-packet new-packet-mark=p2p</span><br><span class="line">2 chain=forward packet-mark=!p2p_conn action=mark-packet new-packet-mark=other</span><br><span class="line">[admin@MikroTik] &gt;</span><br><span class="line">[admin@MikroTik] &gt; /queue tree add parent=Public packet-mark=p2p <span class="built_in">limit</span>-at=1000000 max-limit=100000000 priority=8</span><br><span class="line">[admin@MikroTik] &gt; /queue tree add parent=Local packet-mark=p2p <span class="built_in">limit</span>-at=1000000 max-limit=100000000 priority=8</span><br><span class="line">[admin@MikroTik] &gt; /queue tree add parent=Public packet-mark=other <span class="built_in">limit</span>-at=1000000 max-limit=100000000 priority=1</span><br><span class="line">[admin@MikroTik] &gt; /queue tree add parent=Local packet-mark=other <span class="built_in">limit</span>-at=1000000 max-limit=100000000 priority=1</span><br></pre></td></tr></table></figure><h3 id="Mangle-限制-2-级代理"><a href="#Mangle-限制-2-级代理" class="headerlink" title="Mangle 限制 2 级代理"></a>Mangle 限制 2 级代理</h3><p>通过 mangle 限制 2 级代理， 思路是修改 TTL 值，让路由级数减少， 但对端口的 http 代理无效，进入 forward链表指定 in-interface 或者指定目标数据到内往的 IP 地址，即 dst-address 或 dst-address-list 等参数来修改到达目标的 TTL 值为 1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[admin@MikroTik] /ip firewall mangle&gt; add chain=forward out-interface=lan action=change-ttl new-ttl=<span class="built_in">set</span>:1</span><br><span class="line">[admin@MikroTik] /ip firewall mangle&gt;<span class="built_in">print</span> chain=forward</span><br><span class="line">Flags: X - disabled, I - invalid, D - dynamic</span><br><span class="line">8 chain=forward action=change-ttl new-ttl=<span class="built_in">set</span>:1 out-interface=lan</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mangle 允许对 IP 数据包做特殊的标记， mangle 是通过修改指定的 IP 数据包头字段，去标记 IP 数据包的特征 能标记端口、 IP、协议、 TCP 协议和相应的 IP 数据流。 Mangle 属于综合性功能，所以在路由、流量控制和其他相应功能中都会涉及到。 &lt;/p&gt;
&lt;p&gt;需要功能包: system&lt;br&gt;需要等级: Level1&lt;br&gt;操作路径: /ip firewall mangle&lt;br&gt;协议标准: IP&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="Mangle" scheme="http://rosjb.github.io/tags/Mangle/"/>
    
      <category term="标记" scheme="http://rosjb.github.io/tags/%E6%A0%87%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Mikrotik CCR1072-1G-8S+ 性能测试[视频]</title>
    <link href="http://rosjb.github.io/2016/09/26/mikrotik-ccr1072-performance-test/"/>
    <id>http://rosjb.github.io/2016/09/26/mikrotik-ccr1072-performance-test/</id>
    <published>2016-09-26T15:39:05.000Z</published>
    <updated>2020-06-22T04:53:40.394Z</updated>
    
    <content type="html"><![CDATA[<p><strong>硬件图片:</strong></p><p><img src="/2016/09/26/mikrotik-ccr1072-performance-test/1055_l.jpg" alt="1055_l"></p><hr><p><strong>我们首先来看下官网给出的硬件参数:</strong></p><h2 id="CCR1072-1G-8S"><a href="#CCR1072-1G-8S" class="headerlink" title="CCR1072-1G-8S+"></a>CCR1072-1G-8S+</h2><a id="more"></a><p>Our new flagship router, the CCR1072, is powered by a Tilera 72 core CPU, each core is clocked at 1GHz, and to fully utilise this power, the CCR1072 is equipped with eight independently connected 10G SFP+ ports. </p><p>The unit comes equipped with installed RouterOS L6, 16GB of built in ECC RAM, touchscreen color LCD, two removable (hotplug) power supplies for redundancy, smart card slot, microUSB, regular size USB, microSD and 2x M.2 slots for additional storage. </p><p>Thanks to the unique 72 core processor and ports that are directly connected to the CPU, CCR1072 is capable of over 120 million packets per second throughput.</p><h2 id="Product-specifications"><a href="#Product-specifications" class="headerlink" title="Product specifications"></a>Product specifications</h2><h3 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h3><table><thead><tr><th>Product code</th><th>CCR1072-1G-8S+</th></tr></thead><tbody><tr><td>CPU nominal frequency</td><td>1 GHz</td></tr><tr><td>CPU core count</td><td>72</td></tr><tr><td>Architecture</td><td>TILE</td></tr><tr><td>Size of RAM</td><td>16 GB</td></tr><tr><td>10/100/1000 Ethernet ports</td><td>1</td></tr><tr><td>Number of USB ports</td><td>2</td></tr><tr><td>Memory Cards</td><td>3</td></tr><tr><td>Memory card type</td><td>microSD, 2x M.2</td></tr><tr><td>Supported input voltage</td><td>12 V – 12 V</td></tr><tr><td>Voltage Monitor</td><td>Yes</td></tr><tr><td>CPU temperature monitor</td><td>Yes</td></tr><tr><td>PCB temperature monitor</td><td>Yes</td></tr><tr><td>Dimensions</td><td>443x315x44mm</td></tr><tr><td>Operating System</td><td>RouterOS</td></tr><tr><td>Tested ambient temperature</td><td>-20C .. +60C</td></tr><tr><td>License level</td><td>6</td></tr><tr><td>Current Monitor</td><td>Yes</td></tr><tr><td>CPU</td><td>TLR4-07280DG-10CE</td></tr><tr><td>Max Power consumption</td><td>125W</td></tr><tr><td>SFP+ ports</td><td>8</td></tr><tr><td>USB slot type</td><td>USB type A</td></tr><tr><td>Serial port</td><td>RJ45</td></tr><tr><td>Storage type</td><td>NAND</td></tr><tr><td>Storage size</td><td>128 MB</td></tr><tr><td>Suggested price</td><td>3050</td></tr></tbody></table><hr><p><strong>下面我们来看下国外大佬的性能测试图(特意搬砖来分享给大家):</strong></p><iframe height="270" width="480" src="https://player.youku.com/embed/XMTczOTM0Njc3Ng==" frameborder="0" 'allowfullscreen'></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;硬件图片:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/09/26/mikrotik-ccr1072-performance-test/1055_l.jpg&quot; alt=&quot;1055_l&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;我们首先来看下官网给出的硬件参数:&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;CCR1072-1G-8S&quot;&gt;&lt;a href=&quot;#CCR1072-1G-8S&quot; class=&quot;headerlink&quot; title=&quot;CCR1072-1G-8S+&quot;&gt;&lt;/a&gt;CCR1072-1G-8S+&lt;/h2&gt;
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="CCR1072" scheme="http://rosjb.github.io/tags/CCR1072/"/>
    
  </entry>
  
  <entry>
    <title>RouterBOARD 产品命名与标识</title>
    <link href="http://rosjb.github.io/2016/09/22/RouterBOARD%20%E4%BA%A7%E5%93%81%E5%91%BD%E5%90%8D%E4%B8%8E%E6%A0%87%E8%AF%86/"/>
    <id>http://rosjb.github.io/2016/09/22/RouterBOARD%20%E4%BA%A7%E5%93%81%E5%91%BD%E5%90%8D%E4%B8%8E%E6%A0%87%E8%AF%86/</id>
    <published>2016-09-21T17:56:49.000Z</published>
    <updated>2020-06-21T12:23:44.462Z</updated>
    
    <content type="html"><![CDATA[<p>RouterBOARD产品型号较多，各种字母和数字标识繁琐，下面介绍下产品命名的特点<br> RouterBOARD基本编号适合大多型号，除RB600，RB800和RB1000系列型号外，他们的区别如下：</p><ul><li>RB1XX，即RB100系列 </li><li>RB133，即是100系列，有3个以太网口，3个MiniPCI无线扩展接口 </li><li>RB493，即400系列，有9个以太网口，3个MiniPCI扩展</li></ul><h4 id="1-RouterBOARD基本命名规则"><a href="#1-RouterBOARD基本命名规则" class="headerlink" title="1.RouterBOARD基本命名规则:"></a>1.RouterBOARD基本命名规则:</h4><a id="more"></a><p>  &lt;主板名称&gt; &lt;主板特征&gt; - &lt;集成无线网卡&gt; &lt;无线网卡特征&gt; - &lt;连接接口类型&gt; - &lt;外壳类型&gt;<br>  后缀代表含义： </p><ul><li>AH，A代表高内存，H代表高性能（高CPU） </li><li>e，代表有PCI-e接口扩张 *    G，代表高性能和千兆网口 </li><li>U，代表USB扩展 *    R，代表集成无线模块 </li><li>P，POE *    L，Low低成本产品 *    S，SFP光扩展接口 </li><li>x（N），代表CPU内核数量，如x2，x16，x32 </li></ul><h4 id="2-集成无线网卡命名"><a href="#2-集成无线网卡命名" class="headerlink" title="2.集成无线网卡命名"></a>2.集成无线网卡命名</h4><p>如果集成无线网卡设备，命名格式将是如下：<br>  &lt;频段&gt;&lt;发射功率&gt;&lt;协议&gt;&lt;通道数量&gt;<br>  频段 </p><ul><li>5 – 支持5Ghz </li><li>2 – 支持2.4Ghz </li><li>52 – 支持5Ghz和2.4Ghz </li></ul><p>发射功率 </p><ul><li>无命名 - “普通发射功率” - &lt;23dBm at 6Mbps 802.11a; &lt;24dBm at 6Mbps 802.11g </li><li><a href="http://wiki.mikrotik.com/wiki/Manual:Product_Naming#H" target="_blank" rel="noopener">H</a> - “高发射功率” - 23-24dBm at 6Mbps 802.11a; 24-27dBm at 6Mbps 802.11g </li><li>HP - “较高发射功率” - 25-26dBm 6Mbps 802.11a; 28-29dBm at 6Mbps 802.11g </li><li>SHP - “超高发射功率” - 27+dBm at 6Mbps 802.11a; 30+dBm at 6Mbps 802.11g </li></ul><p>无线协议 </p><ul><li>无命名 – 仅支持802.11a/b/g </li><li>n – 支持802.11n </li><li>ac – 支持802.11ac </li></ul><p>无线通道数量 </p><ul><li>无命名 – 单无线通道 </li><li>D – 双无线通道 </li><li>T – 三无线通道 </li></ul><h4 id="3-无线网卡接口类型命名"><a href="#3-无线网卡接口类型命名" class="headerlink" title="3.无线网卡接口类型命名"></a>3.无线网卡接口类型命名</h4><ul><li>无命名 – 扩展槽根据类型或型号决定 </li><li>MMCX – MMCX接口 </li><li>u.FL - u.FL接口 </li></ul><h4 id="4-外壳类型命名"><a href="#4-外壳类型命名" class="headerlink" title="4.外壳类型命名"></a>4.外壳类型命名</h4><ul><li>无命名 – 一个产品的主型号默认使用外壳 </li><li>BU - board unit (无外壳) – 特殊需求情况下，为仅主板需求的客户提供 </li><li>RM – 机柜外壳型 </li><li>IN – 室内外壳型 </li><li>OUT – 室外防水型 </li><li>SA – 集成扇形天线型 </li><li>HG – 高增益天线外壳 </li><li>EM – 内存扩展型 例如：RB912UAG-5HPnD </li><li>RB (RouterBOARD) </li><li>912 – 9系列主板，1个以太网接口，两个无线网卡接口（集成和MiniPCIe接口）</li><li>UAG – USB接口，大内存和千兆以太网接口 </li><li>5HPnD – 内置5GHz较高发射功率网卡，支持双通道的802.11n协议</li></ul><h4 id="5-Cloud-Core-Router命名"><a href="#5-Cloud-Core-Router命名" class="headerlink" title="5.Cloud Core Router命名"></a>5.Cloud Core Router命名</h4><p>  Cloud Core Router (缩写CCR)<br>&lt;4组产品数字编号&gt;-&lt;端口数量&gt;-&lt;外壳类型&gt;<br>4 组数字编号</p><ul><li>第一个数字代表产品系列 </li><li>第二个数字保留所用 </li><li>第三和第四代表设备上的CPU核心数量 </li></ul><p>端口数量 </p><ul><li>-<n>G – 千兆以太网端口数量 </n></li><li>-<n>S – SFP端口数量 </n></li><li>-<n>S+ - SFP+端口数量 </n></li></ul><h4 id="6-Cloud-Router-Switch命名"><a href="#6-Cloud-Router-Switch命名" class="headerlink" title="6.Cloud Router Switch命名"></a>6.Cloud Router Switch命名</h4><p>  Cloud Router Switch (缩写CRS)命令<br>   &lt;3组产品数字编号&gt;-&lt;端口数量&gt;-&lt;集成无线网卡&gt;-&lt;外壳类型&gt;<br>   3组数字编号</p><ul><li>第一个数字代表产品系列</li><li>第二和第三代表所有有线接口数量(Ethernet, SFP, SFP+)</li></ul><p>端口数量</p><ul><li>-<n>G – 千兆以太网端口数量</n></li><li>-<n>S – SFP端口数量</n></li><li>-<n>S+ - SFP+端口数量</n></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RouterBOARD产品型号较多，各种字母和数字标识繁琐，下面介绍下产品命名的特点&lt;br&gt; RouterBOARD基本编号适合大多型号，除RB600，RB800和RB1000系列型号外，他们的区别如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RB1XX，即RB100系列 &lt;/li&gt;
&lt;li&gt;RB133，即是100系列，有3个以太网口，3个MiniPCI无线扩展接口 &lt;/li&gt;
&lt;li&gt;RB493，即400系列，有9个以太网口，3个MiniPCI扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;1-RouterBOARD基本命名规则&quot;&gt;&lt;a href=&quot;#1-RouterBOARD基本命名规则&quot; class=&quot;headerlink&quot; title=&quot;1.RouterBOARD基本命名规则:&quot;&gt;&lt;/a&gt;1.RouterBOARD基本命名规则:&lt;/h4&gt;
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="RouterBOARD产品命名规则" scheme="http://rosjb.github.io/tags/RouterBOARD%E4%BA%A7%E5%93%81%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>ROS启用设置UPNP功能</title>
    <link href="http://rosjb.github.io/2016/09/21/ROS%E5%90%AF%E7%94%A8%E8%AE%BE%E7%BD%AEUPNP%E5%8A%9F%E8%83%BD/"/>
    <id>http://rosjb.github.io/2016/09/21/ROS%E5%90%AF%E7%94%A8%E8%AE%BE%E7%BD%AEUPNP%E5%8A%9F%E8%83%BD/</id>
    <published>2016-09-21T13:56:04.000Z</published>
    <updated>2020-06-21T13:57:01.125Z</updated>
    
    <content type="html"><![CDATA[<h4 id="关于UPNP微软官方的解释是："><a href="#关于UPNP微软官方的解释是：" class="headerlink" title="关于UPNP微软官方的解释是："></a>关于UPNP微软官方的解释是：</h4><p>UPNP：通用即插即用 (UPNP) 是一种用于 PC 机和智能设备（或仪器）的常见对等网络连接的体系结构，尤其是在家庭中。UPNP 以 Internet 标准和技术（例如 TCP/IP、HTTP 和 XML）为基础，使这样的设备彼此可自动连接和协同工作，从而使网络（尤其是家庭网络）对更多的人成为可能. 简单的说：UPNP能够打通内网与路由之间的完全映射关系，MPT通过UPNP设备与路由之间架设直一条互通的桥梁，使得MPT能获取更多的外网资源，最大限度的提高软件的下载速度. </p><a id="more"></a><h4 id="一、实现UPNP必须满足哪些条件"><a href="#一、实现UPNP必须满足哪些条件" class="headerlink" title="一、实现UPNP必须满足哪些条件?"></a>一、实现UPNP必须满足哪些条件?</h4><p>A. Modem/路由/防火墙设备必须支持UPNP功能：<br>是否具备此功能可查阅说明书或者直接咨询厂家。一般来讲，Modem还必须同时支持路由功能，除非你配备了单独的路由器或者代理服务器；<br>软路由都支持UPNP功能,个别硬件路由不支持此功能. </p><p>B. 操作系统的支持:<br>微软官方只有windows xp系统才支持UPNP功能，官方网站提到从WinMe开始就支持UPNP了，但我相信大家不会使用WinMe来做服务器吧, 所以我们制作了一个win2003下支持UPNP的补丁， 在 win2003 企业版 sp1 下测试通过，具体的安装细语请留意安装前提示信息, 服务器安装完UPNP，必须重启才生效. </p><p>C. 软件支持UPNP功能：<br>注意：以上3个条件必须同时满足，缺一不可，否则你只能考虑进行手动端口映射了, 手工端口映射的效果只能有30%的有效率；下面详细介绍一下开启UPNP方面的细节工作. </p><h4 id="二、开启路由UPNP功能"><a href="#二、开启路由UPNP功能" class="headerlink" title="二、开启路由UPNP功能."></a>二、开启路由UPNP功能.</h4><p>1、Winbox—-IP—UPnP—-UPnP Settings—-Enabled，如图： </p><p><img src="/2016/09/21/ROS%E5%90%AF%E7%94%A8%E8%AE%BE%E7%BD%AEUPNP%E5%8A%9F%E8%83%BD/1.png" alt="1"><br>2、Winbox—-IP—UPnP—-添加，如图： </p><p><img src="/2016/09/21/ROS%E5%90%AF%E7%94%A8%E8%AE%BE%E7%BD%AEUPNP%E5%8A%9F%E8%83%BD/2.png" alt="2"><br><img src="/2016/09/21/ROS%E5%90%AF%E7%94%A8%E8%AE%BE%E7%BD%AEUPNP%E5%8A%9F%E8%83%BD/3.png" alt="3"></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;关于UPNP微软官方的解释是：&quot;&gt;&lt;a href=&quot;#关于UPNP微软官方的解释是：&quot; class=&quot;headerlink&quot; title=&quot;关于UPNP微软官方的解释是：&quot;&gt;&lt;/a&gt;关于UPNP微软官方的解释是：&lt;/h4&gt;&lt;p&gt;UPNP：通用即插即用 (UPNP) 是一种用于 PC 机和智能设备（或仪器）的常见对等网络连接的体系结构，尤其是在家庭中。UPNP 以 Internet 标准和技术（例如 TCP/IP、HTTP 和 XML）为基础，使这样的设备彼此可自动连接和协同工作，从而使网络（尤其是家庭网络）对更多的人成为可能. 简单的说：UPNP能够打通内网与路由之间的完全映射关系，MPT通过UPNP设备与路由之间架设直一条互通的桥梁，使得MPT能获取更多的外网资源，最大限度的提高软件的下载速度. &lt;/p&gt;
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="upnp" scheme="http://rosjb.github.io/tags/upnp/"/>
    
  </entry>
  
  <entry>
    <title>MikroTik RouterOS 各级授权的区别</title>
    <link href="http://rosjb.github.io/2016/04/20/mikrotik-routeros-%E5%90%84%E7%BA%A7%E6%8E%88%E6%9D%83%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://rosjb.github.io/2016/04/20/mikrotik-routeros-%E5%90%84%E7%BA%A7%E6%8E%88%E6%9D%83%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2016-04-20T04:41:37.000Z</published>
    <updated>2020-06-22T06:09:06.326Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>Level number</th><th>0 (FREE)</th><th>1 (DEMO)</th><th>3 (WISP CPE)</th><th>4 (WISP)</th><th>5 (WISP)</th><th>6 (Controller)</th></tr></thead><tbody><tr><td>Price</td><td>no key</td><td>registration required</td><td>volume only</td><td>45</td><td>95</td><td>$250</td></tr><tr><td>Upgradable To</td><td>-</td><td>no upgrades</td><td>ROS v4.x</td><td>ROS v4.x</td><td>ROS v5.x</td><td>ROS v5.x</td></tr><tr><td>Initial Config Support</td><td>-</td><td>-</td><td>-</td><td>15 days</td><td>30 days</td><td>30 days</td></tr><tr><td>Wireless AP</td><td>24h limit</td><td>-</td><td>-</td><td>yes</td><td>yes</td><td>yes</td></tr><tr><td>Wireless Client and Bridge</td><td>24h limit</td><td>-</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td></tr><tr><td>RIP, OSPF, BGP protocols</td><td>24h limit</td><td>-</td><td>yes(*)</td><td>yes</td><td>yes</td><td>yes</td></tr><tr><td>EoIP tunnels</td><td>24h limit</td><td>1</td><td>unlimited</td><td>unlimited</td><td>unlimited</td><td>unlimited</td></tr><tr><td>PPPoE tunnels</td><td>24h limit</td><td>1</td><td>200</td><td>200</td><td>500</td><td>unlimited</td></tr><tr><td>PPTP tunnels</td><td>24h limit</td><td>1</td><td>200</td><td>200</td><td>500</td><td>unlimited</td></tr><tr><td>L2TP tunnels</td><td>24h limit</td><td>1</td><td>200</td><td>200</td><td>500</td><td>unlimited</td></tr><tr><td>OVPN tunnels</td><td>24h limit</td><td>1</td><td>200</td><td>200</td><td>unlimited</td><td>unlimited</td></tr><tr><td>VLAN interfaces</td><td>24h limit</td><td>1</td><td>unlimited</td><td>unlimited</td><td>unlimited</td><td>unlimited</td></tr><tr><td>HotSpot active users</td><td>24h limit</td><td>1</td><td>1</td><td>200</td><td>500</td><td>unlimited</td></tr><tr><td>RADIUS client</td><td>24h limit</td><td>-</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td></tr><tr><td>Queues</td><td>24h limit</td><td>1</td><td>unlimited</td><td>unlimited</td><td>unlimited</td><td>unlimited</td></tr><tr><td>Web proxy</td><td>24h limit</td><td>-</td><td>yes</td><td>yes</td><td>yes</td><td>yes</td></tr><tr><td>Synchronous interfaces</td><td>24h limit</td><td>-</td><td>-</td><td>yes</td><td>yes</td><td>yes</td></tr><tr><td>User manager active sessions</td><td>24h limit</td><td>1</td><td>10</td><td>20</td><td>50</td><td>Unlimited</td></tr><tr><td>Number of KVM guests</td><td>none</td><td>1</td><td>Unlimited</td><td>Unlimited</td><td>Unlimited</td><td>Unlimited</td></tr></tbody></table><a id="more"></a><p>各符号代表:<br>– : 不支持<br>unlimited: 无限制<br>yes: 支持</p><h3 id="如何查看-ROS-等级"><a href="#如何查看-ROS-等级" class="headerlink" title="如何查看 ROS 等级?"></a>如何查看 ROS 等级?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/system license</span><br></pre></td></tr></table></figure><p><img src="/2016/04/20/mikrotik-routeros-%E5%90%84%E7%BA%A7%E6%8E%88%E6%9D%83%E7%9A%84%E5%8C%BA%E5%88%AB/ros%E7%AD%89%E7%BA%A7.jpg" alt="ros等级"></p>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Level number&lt;/th&gt;
&lt;th&gt;0 (FREE)&lt;/th&gt;
&lt;th&gt;1 (DEMO)&lt;/th&gt;
&lt;th&gt;3 (WISP CPE)&lt;/th&gt;
&lt;th&gt;4 (WISP)&lt;/th&gt;
&lt;th&gt;5 (WISP)&lt;/th&gt;
&lt;th&gt;6 (Controller)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Price&lt;/td&gt;
&lt;td&gt;no key&lt;/td&gt;
&lt;td&gt;registration required&lt;/td&gt;
&lt;td&gt;volume only&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;$250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Upgradable To&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;no upgrades&lt;/td&gt;
&lt;td&gt;ROS v4.x&lt;/td&gt;
&lt;td&gt;ROS v4.x&lt;/td&gt;
&lt;td&gt;ROS v5.x&lt;/td&gt;
&lt;td&gt;ROS v5.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Initial Config Support&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;15 days&lt;/td&gt;
&lt;td&gt;30 days&lt;/td&gt;
&lt;td&gt;30 days&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wireless AP&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wireless Client and Bridge&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RIP, OSPF, BGP protocols&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes(*)&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EoIP tunnels&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PPPoE tunnels&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PPTP tunnels&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L2TP tunnels&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OVPN tunnels&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VLAN interfaces&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HotSpot active users&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RADIUS client&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Queues&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;td&gt;unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Web proxy&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Synchronous interfaces&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User manager active sessions&lt;/td&gt;
&lt;td&gt;24h limit&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Number of KVM guests&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Unlimited&lt;/td&gt;
&lt;td&gt;Unlimited&lt;/td&gt;
&lt;td&gt;Unlimited&lt;/td&gt;
&lt;td&gt;Unlimited&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="license" scheme="http://rosjb.github.io/tags/license/"/>
    
      <category term="ros等级" scheme="http://rosjb.github.io/tags/ros%E7%AD%89%E7%BA%A7/"/>
    
      <category term="授权" scheme="http://rosjb.github.io/tags/%E6%8E%88%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>骗子名单</title>
    <link href="http://rosjb.github.io/2016/01/10/%E9%AA%97%E5%AD%90%E5%90%8D%E5%8D%95/"/>
    <id>http://rosjb.github.io/2016/01/10/%E9%AA%97%E5%AD%90%E5%90%8D%E5%8D%95/</id>
    <published>2016-01-09T16:17:09.000Z</published>
    <updated>2020-06-21T13:13:19.896Z</updated>
    
    <content type="html"><![CDATA[<p><strong>有的人喜欢靠坑蒙拐骗维持生计,最近发现有人收费调试ROS,收了别人的钱,最后没调试好,也不退钱.发生这种事,这种人必须曝光!</strong> </p><p>为了不让更多的人受骗上当,专门开设了此板块,这些都是”先烈”用RMB换来的教训,希望其他人在找人调试ROS的时候,看清楚有没有下面的名单.(如果各位已经有过先前被骗的经历和教训,也可以直接联系我或者再此留言,让我们来完善这份名单.)</p><a id="more"></a><hr><h3 id="骗子名单"><a href="#骗子名单" class="headerlink" title="骗子名单"></a><strong>骗子名单</strong></h3><ul><li>骗子001:QQ:497503128  QQ:2785378749  支付宝:<a href="mailto:386249051@qq.com">386249051@qq.com</a>  姓名:张寿坤  电话:15368395391 </li><li>骗子002:QQ:594505775  电话:13556604526 </li><li>骗子003.待添加   </li></ul><p>PS:以上名单均为网友提供和证据!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;有的人喜欢靠坑蒙拐骗维持生计,最近发现有人收费调试ROS,收了别人的钱,最后没调试好,也不退钱.发生这种事,这种人必须曝光!&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;为了不让更多的人受骗上当,专门开设了此板块,这些都是”先烈”用RMB换来的教训,希望其他人在找人调试ROS的时候,看清楚有没有下面的名单.(如果各位已经有过先前被骗的经历和教训,也可以直接联系我或者再此留言,让我们来完善这份名单.)&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="骗子名单" scheme="http://rosjb.github.io/tags/%E9%AA%97%E5%AD%90%E5%90%8D%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>[转载]Ros设置6to4通道访问ipv6网络</title>
    <link href="http://rosjb.github.io/2015/07/23/[%E8%BD%AC%E8%BD%BD]Ros%E8%AE%BE%E7%BD%AE6to4%E9%80%9A%E9%81%93%E8%AE%BF%E9%97%AEipv6%E7%BD%91%E7%BB%9C/"/>
    <id>http://rosjb.github.io/2015/07/23/[%E8%BD%AC%E8%BD%BD]Ros%E8%AE%BE%E7%BD%AE6to4%E9%80%9A%E9%81%93%E8%AE%BF%E9%97%AEipv6%E7%BD%91%E7%BB%9C/</id>
    <published>2015-07-22T17:43:26.000Z</published>
    <updated>2020-06-21T13:41:03.415Z</updated>
    
    <content type="html"><![CDATA[<p>Ipv4地址已经使用殆尽，ipv6网络国内各大运营商还没有正式部署，现在要想使用ipv6网络只能通过安装软件或者设置6to4通道方式进行，下面的方法可以使你在routeros上设置一个6to4通道，从而使局域网中的所有用户不需要特别设置就可以使用ipv6网络。下面看一下做法:  </p><hr><a id="more"></a><ol><li>首先去<a href="http://www.tunnelbroker.net/" target="_blank" rel="noopener">http://www.tunnelbroker.net/</a>这个网站申请一个账号，这个网站提供免费的6to4服务，免费用户限建两个通道。提交注册信息后网站会将密码发送到你的注册邮箱里。这个网站本身支持ipv6协议，如果电脑支持ipv6的话会先尝试用ipv6打开，不行才使用ipv4地址登陆。</li><li>登陆网站，点击左边的Create Regular Tunnel新建一个通道，这时网站会自动侦测你当前的ip地址及适合的网关位置，也可以手动将需要建立通道的ipv4地址填入文本框内，然后选择一个合适的网关，点提交按钮后系统会自动为这个ip建立6to4通道。</li><li>Ros设置方法：这里不给出具体的设置了，因为tunnelbroker网站已经给你了最大的便利，提供各种路由系统的设置方法，在刚才生成6to4通道页面上有一个example configurations标签页，点击后有一个select your os的选单，选择Mikrotik后下面就出现了ros设置脚本，一共3条分别粘贴到ros的控制台中就可以完成设置了。设置完成后可以在ros中ping一下ipv6的网关看看通不通，需要注意的是如果是双线用户，这里可能会不通，具体原因本人还不是太清楚，怀疑是双线回流的问题，单线测试没有问题，如果是pppoe拨号动态ip用户，每次重新拨号后都需要到tunnelbroker网站手动更新ip，比较麻烦。如果需要手动更新ip，登陆tunnelbroker网站后在右侧有个tunnelbroker的链接，点击后就可以在页面下方看到通道的链接了。</li><li>最后，如果想让内网用户自动获得有效的ipv6地址，可以在ros中添加一条<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/ipv6 address add address=ipv6地址段 interface=Lan advertise=yes <span class="built_in">disable</span>=no</span><br></pre></td></tr></table></figure>这里的ipv6地址段就是tunnelbroker通道页面里的Routed /64：这一行后面的地址。</li><li>可能出现的问题：</li></ol><blockquote><blockquote><ol><li>Ros中无法ping通ipv6地址，如ipv6网关，如果是双线，禁用掉不使用的那条线。如果不是，重新检查设置。</li><li>客户端无法ping通ipv6地址：<ul><li>检查客户端电脑是否正确安装了ipv6协议，win7和vista原版用户自带ipv6协议，如果之前卸载了的需要重新安装。xp用户需要手动安装。</li><li>检查客户端是否获得了有效地ipv6地址。</li><li>如果采用nat上网，需要确认防火墙能够通过41号协议。</li></ul></li><li>最后说一下，使用此种方式毕竟不是真正的ipv6网络，速度受到6to4网关的限制，由于tunnelbroker的服务器大多都在国外，所以速度较慢。</li></ol></blockquote></blockquote><hr><p><font color="red">这个功能也已经加入了脚本生成器-左下角工具选项中,有兴趣研究的可以自己尝试和了解下!</font></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ipv4地址已经使用殆尽，ipv6网络国内各大运营商还没有正式部署，现在要想使用ipv6网络只能通过安装软件或者设置6to4通道方式进行，下面的方法可以使你在routeros上设置一个6to4通道，从而使局域网中的所有用户不需要特别设置就可以使用ipv6网络。下面看一下做法:  &lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="技术讨论" scheme="http://rosjb.github.io/categories/%E6%8A%80%E6%9C%AF%E8%AE%A8%E8%AE%BA/"/>
    
    
      <category term="ipv4" scheme="http://rosjb.github.io/tags/ipv4/"/>
    
      <category term="ipv6" scheme="http://rosjb.github.io/tags/ipv6/"/>
    
  </entry>
  
  <entry>
    <title>为什么要做这样一个东西?-ROS脚本生成器</title>
    <link href="http://rosjb.github.io/2015/05/27/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%81%9A%E8%BF%99%E6%A0%B7%E4%B8%80%E4%B8%AA%E4%B8%9C%E8%A5%BF/"/>
    <id>http://rosjb.github.io/2015/05/27/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%81%9A%E8%BF%99%E6%A0%B7%E4%B8%80%E4%B8%AA%E4%B8%9C%E8%A5%BF/</id>
    <published>2015-05-27T11:02:22.000Z</published>
    <updated>2020-06-21T14:21:07.172Z</updated>
    
    <content type="html"><![CDATA[<p>前言:接触ROS也有快2年的时间了,之前用的都是国产的一些不入流的路由(TPlink之类的),运营商的定制路由就更不用说了. </p><p>接触到ROS了,才发现ROS的强大,加了一些ROS的群,也了解了一些ROS大神,看了许多视频教程,特别是<font color="red">大玩家</font>的视频教程深受启发以及<font color="red">余松(yusong)</font>大大的一些关于<a href="http://www.irouteros.com/?page_id=186" target="_blank" rel="noopener">ROS,PDF参考文件</a>,感谢各位大大的奉献,虽然我们从未交流过;ROS的精髓也就是脚本(script),各种流控,HTB,PCC,PCQ,让一款Linux开发的路由系统,发挥的淋漓尽致; </p><a id="more"></a><p>ROS就好比photoshop,只有你想不到的,没有他做不到的,事实的确如此,虽然本人不是做宽带业务的,只是一枚生活在金字塔最底层的屌丝,但是也希望能为ROS的发展做一些事,所以就想开发一款ROS的脚本生成器<font color="blue">(让天下没有编写不出的ROS脚本-我的初衷)</font>之前有老人开发过类似的软件,支持2.X/3.X/4.X系统的脚本生成器,但随着ROS系统的不断更新和升级,之前版本的脚本生成器,有些地方已经不能完全兼容现在的系统了,所以势在必行开发支持5.X-6.X的脚本生成器.</p><p><font color="red">想法:脚本生成器对从没接触过ROS的新手来说还是比较难懂的,因为目前没有想法让新手完全会用这个东西,毕竟ROS的脚本,一定要有ROS的基础知识才能看懂,所以一些ROS的基础知识在软件里会很少提到,在一些比较容易犯错的地方会提示或注释.</font>只要各位朋友有需求,都可以留言提交给我,我会收集各位的需求,然后酌情优先添加功能. </p><p><font color="red"><strong>本人只有一条电信光纤的PPPoE线路,所以在多线和多运营商方面的脚本测试方面有很多不方便,只能靠大家的反馈才能修改,带来不便,提前深表歉意,如果有愿意提供闲置的多线路的ROS路由,我就可以远程方便测试多线的脚本并修改错误!</strong> </font></p><p>如果在版本发布后,各位有任何问题都可以留言,总结问题后在下个版本修复.</p><hr><p>开发内容(暂定):</p><ol><li>N年前的几个脚本生成器的软件的功能全都有,并且只兼容5.X/6.X版本(目前最流行的2个版本)</li><li><del>收集所有网络游戏的端口(尽量收集全,毕竟我不是做网吧项目和网管的,只是屌丝一枚,只能靠广大的用户提供和收集),此功能是方便网吧用户的(工作量太大已放弃)</del></li><li>L7之类的协议脚本.(beta V2.1版本已添加网上现行的L7协议)</li><li>目前功能的拓展,许多参数可以自定义,个性化(比如备注之类的一键生成)</li></ol><hr><p>其他:开发这个东西,我相信肯定会动了那些靠ROS吃饭的人的蛋糕,因为我本身就不是做宽带业务的人,所以各位没必要说什么东西,做这个软件的目的就是为了让大家更方便的写出自己需要的ROS脚本,而不需要每次都要记住那些脚本的语法和单词,就好比学英语一样,其实英语只要会说会理解,但不一定记住每个单词的拼写,就能和别人交流;ROS其实也一样,只要能看懂,但不一定要记住每个单词的意思即可. </p><p>本来想用国外的云服务器或者VPS搭建这个网站的,想想国外的服务器经过GWF一过滤,浏览速度比较慢,所以还是决定用国内的云主机服务器,这样访问不会卡,体验也比较好了,每个月60元的服务器费用,对我屌丝来说也是一笔不小的开支!</p><p><strong>由于租用国内服务器费用昂贵,2020-08-01已经将博客搬迁到github上了,以后大家就在此交流了!</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言:接触ROS也有快2年的时间了,之前用的都是国产的一些不入流的路由(TPlink之类的),运营商的定制路由就更不用说了. &lt;/p&gt;
&lt;p&gt;接触到ROS了,才发现ROS的强大,加了一些ROS的群,也了解了一些ROS大神,看了许多视频教程,特别是&lt;font color=&quot;red&quot;&gt;大玩家&lt;/font&gt;的视频教程深受启发以及&lt;font color=&quot;red&quot;&gt;余松(yusong)&lt;/font&gt;大大的一些关于&lt;a href=&quot;http://www.irouteros.com/?page_id=186&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ROS,PDF参考文件&lt;/a&gt;,感谢各位大大的奉献,虽然我们从未交流过;ROS的精髓也就是脚本(script),各种流控,HTB,PCC,PCQ,让一款Linux开发的路由系统,发挥的淋漓尽致; &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
